{"remainingRequest":"C:\\Users\\PC\\Desktop\\New Project Documents\\MAT311\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\New Project Documents\\MAT311\\src\\views\\unit1.vue?vue&type=template&id=8572c1fa&scoped=true&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\New Project Documents\\MAT311\\src\\views\\unit1.vue","mtime":1597597638797},{"path":"C:\\Users\\PC\\Desktop\\New Project Documents\\MAT311\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Desktop\\New Project Documents\\MAT311\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Desktop\\New Project Documents\\MAT311\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PC\\Desktop\\New Project Documents\\MAT311\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}